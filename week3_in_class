{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "# volcs[4]\n",
    "# watersamps[999]\n",
    "# co2[:7] # first 7 values of co2\n",
    "#feldcont[-4:] # last four of feldcont\n",
    "\n",
    "feldcont = np.zeros(100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (2220226665.py, line 3)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"/tmp/ipykernel_153/2220226665.py\"\u001b[0;36m, line \u001b[0;32m3\u001b[0m\n\u001b[0;31m    i = 1:10\u001b[0m\n\u001b[0m         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "feldcont[1]\n",
    "\n",
    "i = 1:10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "3\n"
     ]
    }
   ],
   "source": [
    "for i in range(1,4):\n",
    "    print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# false\n",
    "# true\n",
    "# false\n",
    "# true\n",
    "# false\n",
    "# true\n",
    "\n",
    "int(2>=2)\n",
    "2>=2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "apples\n",
      "bananas\n",
      "oranges\n",
      "kiwi\n",
      "\n",
      "FIVE\n",
      "\n",
      "Total:  5050\n",
      "counter:  101\n"
     ]
    }
   ],
   "source": [
    "# true\n",
    "# true\n",
    "# false\n",
    "# false, true, false\n",
    "\n",
    "da_foods = [\"apples\", \"bananas\", \"oranges\", \"kiwi\"]\n",
    "for food in da_foods:\n",
    "    print(food)\n",
    "\n",
    "print() \n",
    "\n",
    "x = 5\n",
    "if x == 5:\n",
    "    print(\"FIVE\")\n",
    "elif x == 100:\n",
    "    print(\"ONE HUNDRED\")\n",
    "else:\n",
    "    print(\"NOTHING!\")\n",
    "    \n",
    "print()    \n",
    "\n",
    "counter = 0\n",
    "running_sum = 0\n",
    "while counter <= 100:\n",
    "    running_sum = running_sum + counter\n",
    "    counter = counter + 1\n",
    "    \n",
    "print(\"Total: \", running_sum)\n",
    "print(\"counter: \", counter)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
